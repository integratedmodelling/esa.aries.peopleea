project private namespace peopleea.condition.forest;

// weighted average index aka PEOPLE FOREST CONDITION INDEX
@documented(peopleea.forest_condition_accounts.index)
number o;
@documented(peopleea.forest_condition_accounts.index)
model  im:Indicator ecology:Forest es.nca:Condition
	observing 
		im:Indicator value of ecology:NormalizedDifferenceWaterIndex named indicator_normalized_difference_water_index,
		im:Indicator value of soil:TopSoil chemistry:Organic chemistry:Carbon im:Mass named indicator_soil_organic_carbon,
		im:Indicator value of conservation:Threatened biology:Bird ecology:SpeciesRichness named indicator_threathened_bird_species,
		im:Indicator value of ecology:AboveGroundBiomass named indicator_above_ground_biomass,
		im:Indicator value of ecology:PrimaryProductivity named indicator_net_primary_production, 
	    im:Indicator value of ecology:ForestConnectivity named indicator_forest_connectivity
	set to [
		(0.27 * indicator_normalized_difference_water_index) + (0.07 * indicator_soil_organic_carbon) 
		     + (0.10 * indicator_threathened_bird_species) +  (0.18 * indicator_above_ground_biomass)
		      (0.22 * indicator_net_primary_production) + (0.16 * indicator_forest_connectivity)];
		          
		     
@var(timespan=(start end))	
define table peopleea_forest_condition_index as {
	name: "PEOPLE-EA Forest Condition Index"
	title: "PEOPLE-EA Forest Condition Index Account",
	label: "PEOPLE-EA Forest Condition Index",
	target: im:Indicator ecology:Forest es.nca:Condition
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

//Model to adjust weight for missing SOC variable from 2015 onwards
//TODO: this is just a temporary fix, it would be better solved using im:Role
//If any other variable is not observed (i.e. not loaded from OpenEO) the whole index is not computed
@documented(peopleea.forest_condition_accounts.index)
model  im:Indicator ecology:Forest es.nca:Condition
	observing 
		im:Indicator value of ecology:NormalizedDifferenceWaterIndex named indicator_normalized_difference_water_index,
		im:Indicator value of soil:TopSoil chemistry:Organic chemistry:Carbon im:Mass named indicator_soil_organic_carbon,
		im:Indicator value of conservation:Threatened biology:Bird ecology:SpeciesRichness named indicator_threathened_bird_species,
		im:Indicator value of ecology:AboveGroundBiomass named indicator_above_ground_biomass,
		im:Indicator value of ecology:PrimaryProductivity named indicator_net_primary_production, 
	    im:Indicator value of ecology:ForestConnectivity named indicator_forest_connectivity
	set to [
		def w_ndwi=(nodata(indicator_soil_organic_carbon) ? 0.28 : 0.27)
		def w_soc =(nodata(indicator_soil_organic_carbon) ? 0    : 0.07)
		def w_tbs =(nodata(indicator_soil_organic_carbon) ? 0.1  : 0.11)
		def w_agb =(nodata(indicator_soil_organic_carbon) ? 0.18 : 0.20)
		def w_npp =(nodata(indicator_soil_organic_carbon) ? 0.23 : 0.22)
		def w_fc  =(nodata(indicator_soil_organic_carbon) ? 0.16 : 0.18)
        return((w_ndwi * indicator_normalized_difference_water_index) + (w_soc * indicator_soil_organic_carbon) 
			+ (w_tbs * indicator_threathened_bird_species) + (w_agb * indicator_above_ground_biomass)
			+ (w_npp * indicator_net_primary_production) + (w_fc * indicator_forest_connectivity))];