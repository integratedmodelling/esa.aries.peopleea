project private namespace peopleea.forest.ndwi
	using (BIO_REGION_FOREST_REFERENCES_NDWI) from peopleea.tables;

model 'local:stefano.balbi:esa.aries.peopleea:vito.ndwi#output_warp=true&synchronous=true'
	  as ecology:NormalizedDifferenceWaterIndex; 

number max_ndwi  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, ?, *, *, *) 
		into BIO_REGION_FOREST_REFERENCES_NDWI; 

number min_ndwi  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, *, ?, *, *) 
		into BIO_REGION_FOREST_REFERENCES_NDWI;  

@colormap(colors = ((211, 118, 118) (241, 239, 153) (176, 197, 164)))
model im:Indicator value of ecology:NormalizedDifferenceWaterIndex 
	observing 
		max_ndwi,
		min_ndwi,
		ecology:NormalizedDifferenceWaterIndex named ndwi 
	set to [ndwi < min_ndwi ? 0 : ( ndwi > max_ndwi ? 1 : ((ndwi - min_ndwi)/(max_ndwi - min_ndwi)) )]; 

@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table ndwi_raw_variable as {
	name: "NDWI_variable"
	title: "NDWI Variable Account",
	label: "NDWI Variable",
	target: ecology:NormalizedDifferenceWaterIndex where (any type of ecology:Forest)
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

@documented(peopleea.forest_condition_accounts.indicators)
@var(timespan=(start end))	
define table ndwi_indicator as {
	name: "NDWI_indicator"
	title: "NDWI Indicator Account",
	label: "NDWI Indicator",
	target: im:Indicator value of ecology:NormalizedDifferenceWaterIndex
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};