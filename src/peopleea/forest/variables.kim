project private namespace peopleea.forest.variables
	using (	BIO_REGION_FOREST_REFERENCES_FCOVER,
			BIO_REGION_FOREST_REFERENCES_DROUGHT_SEVERITY, 
			BIO_REGION_FOREST_REFERENCES_TREE_COVER_DENSITY,
			BIO_REGION_FOREST_REFERENCES_LANDSCAPE_NATURALNESS
	) from peopleea.tables;

/* 
 * *********************************************************************
 * 							F-COVER
 * *********************************************************************
 */	
model 'local:ferdinando.villa:scratch:vito.fcover#output_warp=true&synchronous=true' 
	 as ratio of ecology:Vegetation im:Area to im:Area; 

number max_fcover 
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, ?, *) 
		into BIO_REGION_FOREST_REFERENCES_FCOVER; 

number min_fcover
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, *, ?) 
		into BIO_REGION_FOREST_REFERENCES_FCOVER; 

//number indicator_fcover
model im:Indicator ratio of ecology:Vegetation im:Area to im:Area
	observing 
		max_fcover,
		min_fcover,
		ratio of ecology:Vegetation im:Area to im:Area named fcover
	set to [fcover < min_fcover ? 0 : ( fcover > max_fcover ? 1 : ((fcover - min_fcover)/(max_fcover - min_fcover)) )];

@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table fraction_green_vegetation_raw_variable as {
	name: "fcover_variable"
	title: "Fraction of Green Vegetation Cover Variable Account",
	label: "Fraction of Green Vegetation Cover Variable",
	target: ratio of ecology:Vegetation im:Area to im:Area where (any type of ecology:Forest) 
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
}; 

@documented(peopleea.forest_condition_accounts.indicators)
@var(timespan=(start end))	
define table fraction_green_vegetation_indicator as {
	name: "fcover_indicator"
	title: "Fraction of Green Vegetation Cover Indicator Account",
	label: "Fraction of Green Vegetation Cover Indicator",
	target: im:Indicator ratio of ecology:Vegetation im:Area to im:Area
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};
		
/* 
 * *********************************************************************
 * 							DROUGHT SEVERITY
 * *********************************************************************
 */		
	
model 	'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2012',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2013',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2014',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2015',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2016',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2017',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2018',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2019',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2020',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2012',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2012',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2021',
		'local:belen.inguanzo:esa.people.sandbox:esa_people.copernicus_combined_drought_indicator_avg_of_eu_v3_2022'
	as soil:DroughtSeverity;

number max_drought_severity 
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, ?, *) 
		into BIO_REGION_FOREST_REFERENCES_DROUGHT_SEVERITY; 

number min_drought_severity
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, *, ?) 
		into BIO_REGION_FOREST_REFERENCES_DROUGHT_SEVERITY; 

model im:Indicator value of soil:DroughtSeverity 
//number indicator_drought_severity
	observing 
		max_drought_severity,
		min_drought_severity,
		soil:DroughtSeverity named drought_severity
	set to [drought_severity < min_drought_severity ? 0 : ( drought_severity > max_drought_severity ? 1 : ((drought_severity - min_drought_severity)/(max_drought_severity - min_drought_severity)) )];

@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table drought_severity_raw_variable as {
	name: "drought_severity_variable"
	title: "Drought Severity Variable Account",
	label: "Drought Severity Variable",
	target: soil:DroughtSeverity where (any type of ecology:Forest) 
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

@documented(peopleea.forest_condition_accounts.indicators)
@var(timespan=(start end))	
define table drought_severity_indicator as {
	name: "drought_severity_indicator"
	title: "Drought Severity Indicator Account",
	label: "Drought Severity Indicator",
	target: im:Indicator value of soil:DroughtSeverity 
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

/* 
 * *********************************************************************
 * 						TREE COVER DENSITY
 * *********************************************************************
 */	
model 'local:belen.inguanzo:esa.people.sandbox:im-data-global-conservation.copernicus_tree_cover_density_3035_100m_of_europe_2012',
			  'local:belen.inguanzo:esa.people.sandbox:im-data-global-conservation.copernicus_tree_cover_density_3035_100m_of_europe_2015',
			  'local:belen.inguanzo:esa.people.sandbox:im-data-global-conservation.copernicus_tree_cover_density_3035_100m_of_europe_2018'
	as percentage of ecology:CanopyCover;

number max_tree_cover_density  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, ?, *, *, *) 
		into BIO_REGION_FOREST_REFERENCES_TREE_COVER_DENSITY; 

number min_tree_cover_density  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, *, ?, *, *) 
		into BIO_REGION_FOREST_REFERENCES_TREE_COVER_DENSITY;  

//number indicator_tree_cover_density
model im:Indicator percentage of ecology:CanopyCover
	observing 
		max_tree_cover_density,
		min_tree_cover_density,
		percentage of ecology:CanopyCover named tree_cover_density 
	set to [tree_cover_density < min_tree_cover_density ? 0 : ( tree_cover_density > max_tree_cover_density ? 1 : ((tree_cover_density - min_tree_cover_density)/(max_tree_cover_density - min_tree_cover_density)) )];

@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table canopy_cover_raw_variable as {
	name: "canopy_cover_variable"
	title: "Canopy Cover Variable Account (%)",
	label: "Canopy Cover Variable",
	target: percentage of ecology:CanopyCover where (any type of ecology:Forest) 
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

@documented(peopleea.forest_condition_accounts.indicators)
@var(timespan=(start end))	
define table canopy_cover_indicator as {
	name: "canopy_cover_indicator"
	title: "Canopy Cover Indicator Account",
	label: "Canopy Cover Indicator",
	target: im:Indicator percentage of ecology:CanopyCover
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

/* 
 * *********************************************************************
 * 						LANDSCAPE NATURALNESS
 * *********************************************************************
 */	
model 'local:belen.inguanzo:esa.people.sandbox:esa_people.landscape_naturalness_europe_4326_2000',
			  'local:belen.inguanzo:esa.people.sandbox:esa_people.landscape_naturalness_europe_4326_2006',
			  'local:belen.inguanzo:esa.people.sandbox:esa_people.landscape_naturalness_europe_4326_2012',
			  'local:belen.inguanzo:esa.people.sandbox:esa_people.landscape_naturalness_europe_4326_2018'
			  as percentage of ecology:Natural landcover:LandscapeHeterogeneity; 
			  
number max_landscape_naturalness  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, ?, *, *, *) 
		into BIO_REGION_FOREST_REFERENCES_LANDSCAPE_NATURALNESS; 

number min_landscape_naturalness  
	observing
		es.nca:BiogeographicRegionType named bioregion,
		type of ecology:Forest named forest_type
	lookup (bioregion, forest_type, *, ?, *, *) 
		into BIO_REGION_FOREST_REFERENCES_LANDSCAPE_NATURALNESS;  

//number indicator_landscape_naturalness 
model im:Indicator percentage of ecology:Natural landcover:LandscapeHeterogeneity
	observing 
		max_landscape_naturalness,
		min_landscape_naturalness,
		percentage of ecology:Natural landcover:LandscapeHeterogeneity named landscape_naturalness 
	set to [landscape_naturalness < min_landscape_naturalness ? 0 : ( landscape_naturalness > max_landscape_naturalness ? 1 : ((landscape_naturalness - min_landscape_naturalness)/(max_landscape_naturalness - min_landscape_naturalness)) )]; 

@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table landscape_naturalness_raw_variable as {
	name: "landscape_naturalness_variable"
	title: "Landscape Naturalness Variable Account (%)",
	label: "Landscape Naturalness Variable",
	target: percentage of ecology:Natural landcover:LandscapeHeterogeneity where (any type of ecology:Forest)
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

@documented(peopleea.forest_condition_accounts.indicators)
@var(timespan=(start end))	
define table landscape_naturalness_indicator as {
	name: "landscape_naturalness_indicator"
	title: "Landscape Naturalness Indicator Account",
	label: "Landscape Naturalness Indicator",
	target: im:Indicator percentage of ecology:Natural landcover:LandscapeHeterogeneity
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};

/* 
 * *********************************************************************
 * 					BURN SEVERITY (categorized by classes)
 * *********************************************************************
 */	
model local:alessio.bulckaen:esa.aries.peopleea:esa_people.mosev_global_burn_severity_classified_rdnbr_2000,
	  local:alessio.bulckaen:esa.aries.peopleea:esa_people.mosev_global_burn_severity_classified_rdnbr_2005,
	  local:alessio.bulckaen:esa.aries.peopleea:esa_people.mosev_global_burn_severity_classified_rdnbr_2010,
	  local:alessio.bulckaen:esa.aries.peopleea:esa_people.mosev_global_burn_severity_classified_rdnbr_2015,
	  local:alessio.bulckaen:esa.aries.peopleea:esa_people.mosev_global_burn_severity_classified_rdnbr_2020
	as im:Relative im:Differential ecology.incubation:NormalizedBurnRatio;

// not in the app since the data is not very good	
@documented(peopleea.forest_condition_accounts.variable)
@var(timespan=(start end))	
define table burn_severity_raw_variable as {
	name: "burn_severity_variable"
	title: "Burn Severity Variable Account",
	label: "Burn Severity Variable",
	target: im:Relative im:Differential ecology.incubation:NormalizedBurnRatio where (any type of ecology:Forest) 
	observables: (type of ecology:Forest, es.nca:BiogeographicRegionType)
	when: end
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
//		colsummary=  { filter: "mean", title: "Mean" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: (type of ecology:Forest, es.nca:BiogeographicRegionType)}, 
		statistic =  "mean",
		empty='', 
		no-data = ''
	)
};